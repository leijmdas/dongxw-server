<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kunlong.data.dao.DocumentModelMapper">
  <resultMap id="BaseResultMap" type="com.kunlong.data.entity.DocumentModel">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="type" jdbcType="SMALLINT" property="type" />
    <result column="save_mode" jdbcType="TINYINT" property="saveMode" />
    <result column="pic_type" jdbcType="VARCHAR" property="picType" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="qrcode" jdbcType="VARCHAR" property="qrcode" />
    <result column="size" jdbcType="INTEGER" property="size" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="create_by" jdbcType="INTEGER" property="createBy" />
    <result column="compress_flag" jdbcType="TINYINT" property="compressFlag" />
    <result column="is_deleted" jdbcType="TINYINT" property="isDeleted" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.kunlong.data.entity.DocumentModel">
    <result column="document" jdbcType="LONGVARCHAR" property="document" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, type, save_mode, pic_type, url, qrcode, size, create_date, create_by, compress_flag, 
    is_deleted
  </sql>
  <sql id="Blob_Column_List">
    document
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.kunlong.data.entity.DocumentModelExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from document
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.kunlong.data.entity.DocumentModelExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from document
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from document
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from document
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.kunlong.data.entity.DocumentModelExample">
    delete from document
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.kunlong.data.entity.DocumentModel">
    insert into document (id, name, type, 
      save_mode, pic_type, url, 
      qrcode, size, create_date, 
      create_by, compress_flag, is_deleted, 
      document)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{type,jdbcType=SMALLINT}, 
      #{saveMode,jdbcType=TINYINT}, #{picType,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, 
      #{qrcode,jdbcType=VARCHAR}, #{size,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, 
      #{createBy,jdbcType=INTEGER}, #{compressFlag,jdbcType=TINYINT}, #{isDeleted,jdbcType=TINYINT}, 
      #{document,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.kunlong.data.entity.DocumentModel">
    insert into document
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="saveMode != null">
        save_mode,
      </if>
      <if test="picType != null">
        pic_type,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="qrcode != null">
        qrcode,
      </if>
      <if test="size != null">
        size,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="compressFlag != null">
        compress_flag,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="document != null">
        document,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=SMALLINT},
      </if>
      <if test="saveMode != null">
        #{saveMode,jdbcType=TINYINT},
      </if>
      <if test="picType != null">
        #{picType,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="qrcode != null">
        #{qrcode,jdbcType=VARCHAR},
      </if>
      <if test="size != null">
        #{size,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=INTEGER},
      </if>
      <if test="compressFlag != null">
        #{compressFlag,jdbcType=TINYINT},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="document != null">
        #{document,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.kunlong.data.entity.DocumentModelExample" resultType="java.lang.Long">
    select count(*) from document
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update document
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=SMALLINT},
      </if>
      <if test="record.saveMode != null">
        save_mode = #{record.saveMode,jdbcType=TINYINT},
      </if>
      <if test="record.picType != null">
        pic_type = #{record.picType,jdbcType=VARCHAR},
      </if>
      <if test="record.url != null">
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.qrcode != null">
        qrcode = #{record.qrcode,jdbcType=VARCHAR},
      </if>
      <if test="record.size != null">
        size = #{record.size,jdbcType=INTEGER},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=INTEGER},
      </if>
      <if test="record.compressFlag != null">
        compress_flag = #{record.compressFlag,jdbcType=TINYINT},
      </if>
      <if test="record.isDeleted != null">
        is_deleted = #{record.isDeleted,jdbcType=TINYINT},
      </if>
      <if test="record.document != null">
        document = #{record.document,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update document
    set id = #{record.id,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=SMALLINT},
      save_mode = #{record.saveMode,jdbcType=TINYINT},
      pic_type = #{record.picType,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR},
      qrcode = #{record.qrcode,jdbcType=VARCHAR},
      size = #{record.size,jdbcType=INTEGER},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      create_by = #{record.createBy,jdbcType=INTEGER},
      compress_flag = #{record.compressFlag,jdbcType=TINYINT},
      is_deleted = #{record.isDeleted,jdbcType=TINYINT},
      document = #{record.document,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update document
    set id = #{record.id,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=SMALLINT},
      save_mode = #{record.saveMode,jdbcType=TINYINT},
      pic_type = #{record.picType,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR},
      qrcode = #{record.qrcode,jdbcType=VARCHAR},
      size = #{record.size,jdbcType=INTEGER},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      create_by = #{record.createBy,jdbcType=INTEGER},
      compress_flag = #{record.compressFlag,jdbcType=TINYINT},
      is_deleted = #{record.isDeleted,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kunlong.data.entity.DocumentModel">
    update document
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=SMALLINT},
      </if>
      <if test="saveMode != null">
        save_mode = #{saveMode,jdbcType=TINYINT},
      </if>
      <if test="picType != null">
        pic_type = #{picType,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="qrcode != null">
        qrcode = #{qrcode,jdbcType=VARCHAR},
      </if>
      <if test="size != null">
        size = #{size,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=INTEGER},
      </if>
      <if test="compressFlag != null">
        compress_flag = #{compressFlag,jdbcType=TINYINT},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="document != null">
        document = #{document,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.kunlong.data.entity.DocumentModel">
    update document
    set name = #{name,jdbcType=VARCHAR},
      type = #{type,jdbcType=SMALLINT},
      save_mode = #{saveMode,jdbcType=TINYINT},
      pic_type = #{picType,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      qrcode = #{qrcode,jdbcType=VARCHAR},
      size = #{size,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=INTEGER},
      compress_flag = #{compressFlag,jdbcType=TINYINT},
      is_deleted = #{isDeleted,jdbcType=TINYINT},
      document = #{document,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kunlong.data.entity.DocumentModel">
    update document
    set name = #{name,jdbcType=VARCHAR},
      type = #{type,jdbcType=SMALLINT},
      save_mode = #{saveMode,jdbcType=TINYINT},
      pic_type = #{picType,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      qrcode = #{qrcode,jdbcType=VARCHAR},
      size = #{size,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=INTEGER},
      compress_flag = #{compressFlag,jdbcType=TINYINT},
      is_deleted = #{isDeleted,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByExampleWithBLOBsWithRowbounds" parameterType="com.kunlong.data.entity.DocumentModelExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from document
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleWithRowbounds" parameterType="com.kunlong.data.entity.DocumentModelExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from document
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>